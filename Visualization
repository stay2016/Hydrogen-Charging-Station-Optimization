# 시각화를 위한 설치여부 파일 다듬기
select_df = pd.read_csv('설치여부.csv', encoding = 'cp949')
print(select_df.head())

# 설치여부 = 1인 곳의 주소 받아오기

select_address = [0 for col in range(550)] ## 선정된 충전소 개수 만큼

i = 0

for i in range(len(select_df)):
    if select_df['설치여부'][i] == 1.0:
        select_address[i] = select_df['상세주소'][i]
        print(select_address)
    else:
        continue
        
lat, lng = [], []

i = 0

for i, location in enumerate(select_df.상세주소):
    if select_df['설치여부'][i] == 0:
        continue
        
    else:
        try:
            geo_location = gmaps.geocode(location)[0].get('geometry')
            lat.append(geo_location['location']['lat'])
            lng.append(geo_location['location']['lng'])
        except:
            print(f"{i}번째 {(select_df.iloc[i, 3])}의 좌표를 찾을 수 없음")
            lat.append(i)
            lng.append(i)
            
# 지도의 중심을 지정하기 위해 위도와 경도의 평균 구하기

lat2 = Station_address_df['lat'].mean()
long2 = Station_address_df['lng'].mean()

## 충전소 위치 확인

m = folium.Map(location=[lat2, long2], 
               zoom_start=14, 
               )

# 기본 충전소 위치 확인(Color = Blue)

i = 0

for i in range(len(lat)):
    folium.Marker([lat[i], lng[i]] # 충전소
                  ).add_to(m) 



m.save('cover(weight - 1).html')

# 커버 여부 보기
m2 = folium.Map(location=[lat2, long2], 
               zoom_start=14)

# Circle
i = 0

for i in range(len(Station_address_df)):
    folium.Circle([Station_address_df['lat'][i], Station_address_df['lng'][i]], # 충전소
                 radius = 10000, # 원 크기
                 color='#eb9e34', # 원 선 색상
                 fill_color='red', # 원 내부 색상
                 popup = 'Circle popup',
                 tooltip = '충전소 반경 범위').add_to(m2)
    
# 기본 노드 위치 확인
j = 0

for j in range(len(M_address_df)):
    folium.Marker([M_address_df['lat'][j], M_address_df['lng'][j]] # 충전소
                 ,icon=folium.Icon(color='black', icon='leaf')).add_to(m2) 


m2.save('cover2(weight - 1).html')
